{"version":3,"sources":["components/Form/Form.js","components/Todo/Todo.js","components/TodoList/TodoList.js","components/Filter/Filter.js","App.js","index.js"],"names":["Form","state","title","handleChange","event","value","target","setState","handleSubmit","preventDefault","props","addTodo","this","onSubmit","className","placeholder","onChange","React","Component","Todo","handleTodoStatus","changeStatusTodo","todo","id","handleDelete","todoId","deleteTodo","completed","type","checked","htmlFor","onClick","TodoList","PropTypes","number","bool","string","todos","map","key","Filter","handleFilterClick","href","name","App","filter","trim","prevState","Date","toggleAllTodos","clearAllCompleted","visibleTodos","length","every","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.092dd242.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Form extends React.Component {\n  state = {\n    title: '',\n  };\n\n  handleChange = (event) => {\n    const { value } = event.target;\n\n    this.setState({\n      title: value,\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { title } = this.state;\n\n    this.props.addTodo(title);\n\n    this.setState({\n      title: '',\n    });\n  };\n\n  render() {\n    const { title } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <input\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n          value={title}\n          onChange={this.handleChange}\n        />\n      </form>\n    );\n  }\n}\n\nForm.propTypes = {\n  addTodo: PropTypes.func.isRequired,\n};\n\nexport default Form;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Todo extends React.Component {\n  handleTodoStatus = () => {\n    this.props.changeStatusTodo(this.props.todo.id);\n  };\n\n  handleDelete = (todoId) => {\n    this.props.deleteTodo(todoId);\n  };\n\n  render() {\n    const { todo } = this.props;\n    const { id, title, completed } = todo;\n\n    return (\n      <li\n        className={completed ? 'completed' : ''}\n      >\n        <div className=\"view\">\n          <input\n            type=\"checkbox\"\n            className=\"toggle\"\n            checked={completed}\n            onChange={this.handleTodoStatus}\n            id={id}\n          />\n          <label\n            htmlFor=\"label\"\n          >\n            {title}\n          </label>\n          <button\n            type=\"button\"\n            className=\"destroy\"\n            onClick={() => this.handleDelete(id)}\n          />\n        </div>\n      </li>\n    );\n  }\n}\n\nexport const todoTypes = {\n  id: PropTypes.number,\n  completed: PropTypes.bool,\n  title: PropTypes.string,\n};\n\nTodo.propTypes = {\n  todo: PropTypes.shape(todoTypes).isRequired,\n  changeStatusTodo: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Todo, todoTypes } from '../Todo/Todo';\n\nconst TodoList = ({\n  todos,\n  deleteTodo,\n  changeStatusTodo,\n}) => (\n  <ul className=\"todo-list\">\n    {todos.map(todo => (\n      <Todo\n        key={todo.id}\n        todo={todo}\n        deleteTodo={deleteTodo}\n        changeStatusTodo={changeStatusTodo}\n      />\n    ))}\n  </ul>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape(todoTypes).isRequired,\n  ).isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n  changeStatusTodo: PropTypes.func.isRequired,\n};\n\nexport default TodoList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Filter = ({ handleFilterClick }) => (\n  <ul className=\"filters\">\n    <li>\n      <a\n        href=\"#/\"\n        className=\"selected\"\n        name=\"all\"\n        onClick={handleFilterClick}\n      >\n            All\n      </a>\n    </li>\n    <li>\n      <a\n        href=\"#/active\"\n        name=\"active\"\n        onClick={handleFilterClick}\n      >\n            Active\n      </a>\n    </li>\n    <li>\n      <a\n        href=\"#/completed\"\n        name=\"completed\"\n        onClick={handleFilterClick}\n      >\n            Completed\n      </a>\n    </li>\n  </ul>\n\n);\n\nFilter.propTypes = {\n  handleFilterClick: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React from 'react';\nimport Form from './components/Form/Form';\nimport TodoList from './components/TodoList/TodoList';\nimport Filter from './components/Filter/Filter';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    filter: 'all',\n  };\n\n  addTodo = (title) => {\n    if (title.trim() === '') {\n      return;\n    }\n\n    this.setState(prevState => ({\n      todos: [...prevState.todos,\n        {\n          id: +new Date(),\n          title,\n          completed: false,\n        },\n      ],\n    }));\n  };\n\n  changeStatusTodo = (todoId) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.map((todo) => {\n        if (todo.id !== todoId) {\n          return todo;\n        }\n\n        return {\n          ...todo,\n          completed: !todo.completed,\n        };\n      }),\n    }));\n  };\n\n  deleteTodo = (todoId) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => todo.id !== todoId),\n    }));\n  };\n\n  toggleAllTodos = (event) => {\n    const { checked } = event.target;\n\n    this.setState(prevState => ({\n      todos: prevState.todos.map(todo => ({\n        ...todo,\n        completed: checked,\n      })),\n    }));\n  };\n\n  clearAllCompleted = () => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => !todo.completed),\n    }));\n  };\n\n  handleFilterClick = (event) => {\n    const { name } = event.target;\n\n    this.setState({\n      filter: name,\n    });\n  };\n\n   visibleTodos = () => {\n     const { todos, filter } = this.state;\n\n     switch (filter) {\n       case 'active': return todos.filter(todo => !todo.completed);\n       case 'completed': return todos.filter(todo => todo.completed);\n       default: return todos;\n     }\n   };\n\n   render() {\n     const { todos } = this.state;\n\n     return (\n       <section className=\"todoapp\">\n         <header className=\"header\">\n           <h1>todos</h1>\n           <Form\n             addTodo={this.addTodo}\n           />\n         </header>\n         {todos.length > 0 && (\n           <section className=\"main\">\n             <input\n               type=\"checkbox\"\n               id=\"toggle-all\"\n               className=\"toggle-all\"\n               onChange={this.toggleAllTodos}\n               checked={todos.every(todo => todo.completed)}\n             />\n             <label htmlFor=\"toggle-all\">Mark all as complete</label>\n             <TodoList\n               todos={this.visibleTodos()}\n               deleteTodo={this.deleteTodo}\n               changeStatusTodo={this.changeStatusTodo}\n             />\n           </section>\n         )}\n         {todos.length > 0 && (\n           <footer className=\"footer\">\n             <span className=\"todo-count\">\n               {todos.filter(todo => !todo.completed).length}\n              items left\n             </span>\n             <Filter\n               handleFilterClick={this.handleFilterClick}\n             />\n             <button\n               type=\"button\"\n               className=\"clear-completed\"\n               onClick={this.clearAllCompleted}\n             >\n              Clear completed\n             </button>\n           </footer>\n         )}\n\n       </section>\n     );\n   }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}